# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""The metadata associated with an uploaded media file."""
type MediaMetadata {
  """The date/time when this media was captured."""
  createdAt: DateTime!

  """The description of the media context."""
  description: String!

  """The ID of the H5P activity where this media was captured."""
  h5pId: String!

  """The ID of the H5P sub-activity where this media was captured."""
  h5pSubId: String

  """The UUID that identifies this media file."""
  id: ID!

  """The mime type of the captured media."""
  mimeType: String!

  """The ID of the Live room where this media was captured."""
  roomId: String!

  """The ID of the user associated with this media."""
  userId: ID!
}

type Query {
  """Returns a list of audio metadata matching the provided arguments."""
  audioMetadata(h5pId: String!, h5pSubId: String, roomId: String!, userId: String!): [MediaMetadata!]!

  """
  Returns a presigned download URL and the base64 encoded symmetric key
  that was used to encrypt the media file when it was uploaded.
  The symmetric key can be used to decrypt the media file after downloading.
  """
  getRequiredDownloadInfo(mediaId: String!, roomId: String!): RequiredDownloadInfo!

  """Returns a generated media ID and a presigned upload URL."""
  getRequiredUploadInfo(
    base64EncryptedSymmetricKey: String!
    base64UserPublicKey: String!
    description: String!
    h5pId: String!
    h5pSubId: String

    """Supported: image/*, audio/*"""
    mimeType: String!
    userId: String
  ): RequiredUploadInfo!

  """Returns a base64 encoded server public key."""
  getServerPublicKey: String!

  """Returns a list of image metadata matching the provided arguments."""
  imageMetadata(h5pId: String!, h5pSubId: String, roomId: String!, userId: String!): [MediaMetadata!]!
}

"""The info required to download a media file."""
type RequiredDownloadInfo {
  """
  A base64 encoded symmetric key. Used to decrypt the same media file that it encrypted.
  """
  base64SymmetricKey: String!

  """A presigned download URL."""
  presignedUrl: String!
}

"""The info required to upload a media file."""
type RequiredUploadInfo {
  """A generated UUID to identify a media file."""
  mediaId: String!

  """A presigned upload URL."""
  presignedUrl: String!
}
