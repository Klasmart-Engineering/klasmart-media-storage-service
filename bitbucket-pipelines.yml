definitions:
  services:
    postgres:
      image: postgres
      environment:
        POSTGRES_DB: test_audio_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: kidsloop

  steps:
    - step: &npm-install-and-test
        name: '⚡ npm install and test'
        image: node:16
        services:
          - postgres
          - docker
        script:
          - >
            docker run
            -d
            -p 9000:9000
            -p 9001:9001
            -e "MINIO_ACCESS_KEY=minio"
            -e "MINIO_SECRET_KEY=minio123"
            minio/minio server /data --console-address ":9001"
          - export HUSKY=0
          - npm i
          - npm run test:codecov
        artifacts:
          - node_modules/**
        caches:
          - node
          - docker

    - step: &commitlint
        name: '📝 conventional commits check'
        image: node:16
        script:
          - /bin/bash commitlint-pipeline-check.sh

    - step: &npm-build
        name: '⚡ npm build'
        image: node:16-alpine
        script:
          - npm run build
        artifacts:
          - dist/**

    - step: &docker-build-and-run
        name: '🐳 docker build and run'
        services:
          - docker
          - postgres
        script:
          - docker build -t $DOCKER_REPO_NAME .
          - >
            docker run --add-host host.docker.internal:$BITBUCKET_DOCKER_HOST_INTERNAL \
              -d \
              --name=check-startup \
              --env-file ./.env.ci \
              $DOCKER_REPO_NAME && sleep 8 && docker logs check-startup && docker top check-startup

    - step: &version-bump
        name: '🏷️ version bump'
        trigger: 'manual'
        deployment: release
        image: node:16
        artifacts:
          - version.txt
        services:
          - docker
        script:
          - npm run release
          - npm run build
          - npm prune --production
          - docker build -t $DOCKER_REPO_NAME .
          - export VERSION_TAG=$(git describe --tags --abbrev=0)
          - echo $VERSION_TAG > ./version.txt
          - pipe: atlassian/aws-ecr-push-image:1.5.0
            variables:
              AWS_DEFAULT_REGION: eu-west-2
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_KEY
              IMAGE_NAME: $DOCKER_REPO_NAME
              TAGS: '$VERSION_TAG alpha'
          # This step will fail if 'main' branch write permissions isn't set to 'everyone'.
          - git push origin main
          - git push origin $VERSION_TAG

    - step: &deploy-to-alpha
        name: '🔔 deploy to alpha'
        script:
          - pipe: atlassian/aws-ecs-deploy:1.6.1
            variables:
              # These AWS values are workspace variables for alpha-dev.
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_ALPHA_OLD
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_ALPHA_OLD
              AWS_DEFAULT_REGION: 'ap-northeast-2'
              CLUSTER_NAME: 'kidsloop-alpha'
              SERVICE_NAME: 'kl-alpha-h5p-audio'
              FORCE_NEW_DEPLOYMENT: 'true'
              WAIT: 'true'
        after-script:
          - export VERSION_TAG=$(cat ./version.txt)
          - pipe: docker://cabauman/slack-notify-commits:0.6.1
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK
              MESSAGE: '🚀 A new build of Audio service ($VERSION_TAG) has been deployed to *alpha*.'
              BITBUCKET_USER: $BITBUCKET_PIPELINE_READER_USER
              BITBUCKET_APP_PASSWORD: $BITBUCKET_PIPELINE_READER_APP_PASSWORD

pipelines:
  pull-requests:
    '**':
      - step: *npm-install-and-test
      - step: *commitlint
      - step: *npm-build
      - step: *docker-build-and-run

  branches:
    main:
      - step: *npm-install-and-test
      - step: *version-bump
      - step: *deploy-to-alpha
